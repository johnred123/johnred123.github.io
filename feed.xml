<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.7.4">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2020-02-29T23:25:34+08:00</updated><id>http://localhost:4000/</id><title type="html">路人A的点滴记录</title><subtitle>记录我的一些经历</subtitle><entry><title type="html">Git Clone断点续传</title><link href="http://localhost:4000/git-clone-break" rel="alternate" type="text/html" title="Git Clone断点续传" /><published>2019-07-23T23:32:00+08:00</published><updated>2019-07-23T23:32:00+08:00</updated><id>http://localhost:4000/git-clone-break</id><content type="html" xml:base="http://localhost:4000/git-clone-break">&lt;p&gt;实现Git工具的断点续传功能&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Git clone _url_&lt;/code&gt;在克隆大容量代码库或者网络状况不好的时候经常出现中断的情况，但是git默认的clone
功能是不能断点续传的，一旦出错就会清空之前的花费大量时间下载下来的代码。&lt;/p&gt;

&lt;p&gt;但是git中fetch功能是可以实现增量下载的，因此可以使用fetch命令来间接达到断点续传的功能。&lt;/p&gt;

&lt;p&gt;实现一：&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;user&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git init &lt;span class=&quot;c&quot;&gt;# 在当前目录下建立一个空的git库&lt;/span&gt;
user&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git remote add git://_url_.git &lt;span class=&quot;c&quot;&gt;# 将需要下载的git代码库地址加入本地代码库的远程端&lt;/span&gt;
user&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git fetch &lt;span class=&quot;nt&quot;&gt;--all&lt;/span&gt;
user&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git checkout origrl master
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;实现二：&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;user&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git init &lt;span class=&quot;c&quot;&gt;# 在当前目录下建立一个空的git库&lt;/span&gt;
user&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git fetch git://_url_.git &lt;span class=&quot;c&quot;&gt;# 将需要下载的git代码库地址加入本地代码库的远程端     &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;在个人使用git库的时候，大多数情况下是只需要当前某个分支的最新代码，而并不一定需要所有的代码历史记录，这时我们就可以使用fetch命令的options(设置选项)&lt;code class=&quot;highlighter-rouge&quot;&gt;--depth=&amp;lt;n&amp;gt;&lt;/code&gt;，将N设置为1，即只获取最新代码，可以减少clone不必要代码所需要花费的时间。&lt;/p&gt;

&lt;p&gt;当然为了继续加速下载过程，我们可以使用&lt;code class=&quot;highlighter-rouge&quot;&gt;git fetch --jobs=&amp;lt;n&amp;gt; _url_git_&lt;/code&gt;命令，进行并行下载。&lt;/p&gt;</content><author><name>Liam Hudson</name></author><category term="software-git" /><summary type="html">实现Git工具的断点续传功能</summary></entry><entry><title type="html">Ruby Gems mirrors修改</title><link href="http://localhost:4000/ruby-gems-mirrors" rel="alternate" type="text/html" title="Ruby Gems mirrors修改" /><published>2018-06-13T22:18:00+08:00</published><updated>2018-06-13T22:18:00+08:00</updated><id>http://localhost:4000/ruby-gems-mirrors</id><content type="html" xml:base="http://localhost:4000/ruby-gems-mirrors">&lt;p&gt;镜像地址修改方式&lt;/p&gt;

&lt;p&gt;这里我使用的是清华大学的镜像站&lt;/p&gt;

&lt;h3 id=&quot;gems&quot;&gt;Gems&lt;/h3&gt;
&lt;p&gt;使用以下命令替换 gems 默认源&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 添加 TUNA 源并移除默认源&lt;/span&gt;
gem sources &lt;span class=&quot;nt&quot;&gt;--add&lt;/span&gt; https://mirrors.tuna.tsinghua.edu.cn/rubygems/ &lt;span class=&quot;nt&quot;&gt;--remove&lt;/span&gt; https://rubygems.org/
&lt;span class=&quot;c&quot;&gt;# 列出已有源&lt;/span&gt;
gem sources &lt;span class=&quot;nt&quot;&gt;-l&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 应该只有 TUNA 一个&lt;/span&gt;
或者，编辑 ~/.gemrc，将 https://mirrors.tuna.tsinghua.edu.cn/rubygems/ 加到 sources 字段。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;bundler&quot;&gt;bundler&lt;/h3&gt;
&lt;p&gt;使用以下命令替换 bundler 默认源&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;user&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;bash bundle config mirror.https://rubygems.org https://mirrors.tuna.tsinghua.edu.cn/rubygems
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Liam Hudson</name></author><category term="ruby" /><summary type="html">镜像地址修改方式</summary></entry><entry><title type="html">Welcome to Ghost</title><link href="http://localhost:4000/welcome" rel="alternate" type="text/html" title="Welcome to Ghost" /><published>2017-07-27T18:00:00+08:00</published><updated>2017-07-27T18:00:00+08:00</updated><id>http://localhost:4000/welcome</id><content type="html" xml:base="http://localhost:4000/welcome">&lt;p&gt;Hey! Welcome to Ghost, it’s great to have you :)&lt;/p&gt;

&lt;p&gt;We know that first impressions are important, so we’ve populated your new site with some initial &lt;strong&gt;Getting Started&lt;/strong&gt; posts that will help you get familiar with everything in no time. This is the first one!&lt;/p&gt;

&lt;h3 id=&quot;there-are-a-few-things-that-you-should-know-up-front&quot;&gt;There are a few things that you should know up-front:&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;Ghost is designed for ambitious, professional publishers who want to actively build a business around their content. That’s who it works best for. If you’re using Ghost for some other purpose, that’s fine too - but it might not be the best choice for you.&lt;/li&gt;
  &lt;li&gt;The entire platform can be modified and customized to suit your needs, which is very powerful, but doing so &lt;strong&gt;does&lt;/strong&gt; require some knowledge of code. Ghost is not necessarily a good platform for beginners or people who just want a simple personal blog.&lt;/li&gt;
  &lt;li&gt;For the best experience we recommend downloading the Ghost Desktop App for your computer, which is the best way to access your Ghost site on a desktop device.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Ghost is made by an independent non-profit organisation called the Ghost Foundation. We are 100% self funded by revenue from our &lt;a href=&quot;https://ghost.org/pricing&quot;&gt;Ghost(Pro)&lt;/a&gt; service, and every penny we make is re-invested into funding further development of free, open source technology for modern journalism.&lt;/p&gt;

&lt;p&gt;The main thing you’ll want to read about next is probably: &lt;a href=&quot;https://demo.ghost.io/the-editor/&quot;&gt;the Ghost editor&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Once you’re done reading, you can simply delete the default &lt;strong&gt;Ghost&lt;/strong&gt; user from your team to remove all of these introductory posts!&lt;/p&gt;</content><author><name>Ghost</name></author><category term="Getting started" /><summary type="html">Hey! Welcome to Ghost, it’s great to have you :)</summary></entry><entry><title type="html">Linux内核驱动之模块结构</title><link href="http://localhost:4000/linux-kernel-driver-struct-modules" rel="alternate" type="text/html" title="Linux内核驱动之模块结构" /><published>2016-07-19T04:38:00+08:00</published><updated>2016-07-19T04:38:00+08:00</updated><id>http://localhost:4000/linux-kernel-driver-struct-modules</id><content type="html" xml:base="http://localhost:4000/linux-kernel-driver-struct-modules">&lt;p&gt;Linux内核驱动开发之模块结构&lt;/p&gt;

&lt;h2 id=&quot;基本结构&quot;&gt;基本结构&lt;/h2&gt;
&lt;p&gt;在Linux内核驱动模块开发时，每一个模块程序有其固定的框架结构，包括&lt;code class=&quot;highlighter-rouge&quot;&gt;module_init()&lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;module_exit()&lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;xxx_open()&lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;xxx_close()&lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;xxx_ioctl()&lt;/code&gt;等等。&lt;/p&gt;
&lt;h3 id=&quot;最基本的模块结构&quot;&gt;最基本的模块结构&lt;/h3&gt;

&lt;p&gt;在模块框架中，一个模块所必须的接口是&lt;code class=&quot;highlighter-rouge&quot;&gt;module_init()&lt;/code&gt;,&lt;code class=&quot;highlighter-rouge&quot;&gt;module_exit()&lt;/code&gt;，以及一些模块信息。&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;必须实现的模块接口\left\{
    \begin{aligned}
    module\_init(......) \\
    module\_exit(......) \\
    \end{aligned}
    \right.&lt;/script&gt;

&lt;p&gt;因为Linux是&lt;a href=&quot;https://baike.baidu.com/item/%E5%BC%80%E6%94%BE%E6%BA%90%E4%BB%A3%E7%A0%81/114160?fromtitle=Open%20Source&quot;&gt;open source&lt;/a&gt;，所以会在一个模块中包含一些关于模块的信息，但并不是必须的。&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;模块信息的一些设置 \left\{
    \begin{aligned}
    MODULE\_DESCRIPTION(......) \\
    MODULE\_AUTHOR(......) \\
    MODULE\_LICENSE(......) \\
    MODULE\_VERSION(......) \\
    \end{aligned}
    \right.&lt;/script&gt;</content><author><name>Liam Hudson</name></author><category term="[&quot;linux&quot;]" /><category term="driver" /><summary type="html">Linux内核驱动开发之模块结构</summary></entry><entry><title type="html">仪表放大器的性能指标</title><link href="http://localhost:4000/Instrument-amplifier-performance-criteria" rel="alternate" type="text/html" title="仪表放大器的性能指标" /><published>2015-11-09T06:12:00+08:00</published><updated>2015-11-09T06:12:00+08:00</updated><id>http://localhost:4000/Instrument-amplifier-performance-criteria</id><content type="html" xml:base="http://localhost:4000/Instrument-amplifier-performance-criteria">&lt;p&gt;仪表放大器的性能指标要求&lt;/p&gt;

&lt;p&gt;在硬件电路设计中，硬件工程师常常需要选型一个或多种仪表放大器应用于各种精密放大的场合。&lt;/p&gt;

&lt;h2 id=&quot;那什么是仪表放大器&quot;&gt;那什么是仪表放大器？&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://baike.baidu.com/item/%E4%BB%AA%E8%A1%A8%E6%94%BE%E5%A4%A7%E5%99%A8&quot;&gt;仪表放大器&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;仪表放大器的主要性能指标有哪些&quot;&gt;仪表放大器的主要性能指标有哪些？&lt;/h2&gt;</content><author><name>Liam Hudson</name></author><category term="[&quot;Hardware&quot;]" /><category term="Filter" /><summary type="html">仪表放大器的性能指标要求</summary></entry><entry><title type="html">我理解的PCB工程师分级</title><link href="http://localhost:4000/pcb-standard" rel="alternate" type="text/html" title="我理解的PCB工程师分级" /><published>2015-06-20T22:18:00+08:00</published><updated>2015-06-20T22:18:00+08:00</updated><id>http://localhost:4000/pcb-standard</id><content type="html" xml:base="http://localhost:4000/pcb-standard">&lt;h1 id=&quot;我所理解的pcb工程师金字塔分级标准&quot;&gt;我所理解的PCB工程师金字塔分级标准&lt;/h1&gt;

&lt;h2 id=&quot;入门级pcb工程师&quot;&gt;入门级PCB工程师&lt;/h2&gt;

&lt;h3 id=&quot;能力要求&quot;&gt;能力要求：&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;能制作简单的封装，如DIP10等到；&lt;/li&gt;
  &lt;li&gt;掌握至少一种PCB设计软件的基本操作，并能制订简单的布线线宽和间距等规则；&lt;/li&gt;
  &lt;li&gt;能对具有100个元件和200个网络或以下PCB进行较合理和有序的布局和布线；&lt;/li&gt;
  &lt;li&gt;能在他人或自定规则下手动或自动布线并修改，达到100%布通并DRC完全通过；&lt;/li&gt;
  &lt;li&gt;具备基本的机械结构和热设计知识；&lt;/li&gt;
  &lt;li&gt;掌握双面板走线的一些基本要求。&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;工作内容&quot;&gt;工作内容：&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;简单PCB的设计和修改（如结构简音的前面板、单片机小系统板等）；&lt;/li&gt;
  &lt;li&gt;复杂PCB中规定部分的走线；&lt;/li&gt;
  &lt;li&gt;与自己设计PCB相关的调试；&lt;/li&gt;
  &lt;li&gt;写相关的开发、调试日志。&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;工作职责&quot;&gt;工作职责：&lt;/h3&gt;
&lt;p&gt;对PCB中自己设计部分负责。&lt;/p&gt;

&lt;h2 id=&quot;初级pcb工程师&quot;&gt;初级PCB工程师&lt;/h2&gt;

&lt;h3 id=&quot;能力要求-1&quot;&gt;能力要求：&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;能根据手册和实物制作较复杂的封装，如带灯RJ-45座等，并保证外形、焊盘等尺寸完全正确（按实物测量至少保证可插入）；&lt;/li&gt;
  &lt;li&gt;较熟悉掌握至少一种PCB设计软件并能独立或在指导下制订较详细的布线规则；&lt;/li&gt;
  &lt;li&gt;能对具有400个元件和1000个网络或以下单、双面和多层PCB进行较合理和有序的布局和布线，能在布局布线过程中随时考虑到热设计、结构设计、电磁兼容性设计、美观等方面的要求，自己不能确定时及时向更高级PCB工程师请教或共同探讨；&lt;/li&gt;
  &lt;li&gt;能在他人或自定规则下熟练手动或自动布线并修改，达到100%布通并DRC完全通过，基本上不存在线宽瓶颈、内层孤岛等问题，布线过程中能看出少量原理设计上低级错误并提出，并能正确进行引脚和门交换，能正确修改网络表和原理图；&lt;/li&gt;
  &lt;li&gt;能正确导入、导出机械图纸并基本看懂结构尺寸要求；&lt;/li&gt;
  &lt;li&gt;能在他人所制定规则或指导下进行一些高速和模拟PCB设计并基本稳定；&lt;/li&gt;
  &lt;li&gt;丝印标志清晰明了，能独立完成出GERBER等设计输出工作并校对；&lt;/li&gt;
  &lt;li&gt;具备基本的可制造性方面知识并用于实践，所设计板子50%以上可用于生产。&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;工作内容-1&quot;&gt;工作内容：&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;较复杂PCB的设计和修改（如调度机中除CPU板外的板，十六画面分割器板等）；&lt;/li&gt;
  &lt;li&gt;复杂PCB中规定部分的走线；&lt;/li&gt;
  &lt;li&gt;与自己设计PCB相关的调试；&lt;/li&gt;
  &lt;li&gt;对所有更低级PCB工程师的工作指导；&lt;/li&gt;
  &lt;li&gt;写相关的开发、调试日志；&lt;/li&gt;
  &lt;li&gt;必要时（指自己一定时间内暂时无相应的设计任务，或某一PCB设计工作时间紧迫，必须抽调或加强设计人员时，下同）妆任任意低级PCB工程师的工作。&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;工作职责-1&quot;&gt;工作职责：&lt;/h3&gt;
&lt;p&gt;对PCB中自己设计部分负责。&lt;/p&gt;

&lt;h2 id=&quot;中级pcb工程师可根据个人具体能力现细分为abc三档a最高b次之&quot;&gt;中级PCB工程师（可根据个人具体能力现细分为A、B、C三档，A最高，B次之）&lt;/h2&gt;

&lt;h3 id=&quot;能力要求-2&quot;&gt;能力要求：&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;能完全看懂各种原版器件手册和布线手册，能独立制作极复杂的封装，如放置开关，并保证各种能力完全正确（按实物测量至少保证插入），能自行根据原理和结构要求寻找合适器件或替换品；&lt;/li&gt;
  &lt;li&gt;熟练掌握至少一种PCB设计软件的操作和技巧并能制订详细的布线规则；&lt;/li&gt;
  &lt;li&gt;能根据系统要求提出各功能板块划分和整合意见，能对任意多个元件和网络的PCB独立或分工进行合理和各功能板块布局和布线，能在布局布线过程中随时考虑热设计、结构设计、SI、PI、EMC、美观、可制造性等方面的要求并提出解决方案，能对入门级和初级PCB工程师提供一些布局和布线中的要求和规则参考等；&lt;/li&gt;
  &lt;li&gt;能正确进行板的叠层结构设计，并在满足性能要求下尽量减少层数、降低成本；&lt;/li&gt;
  &lt;li&gt;具有较多的阻抗、时延、过冲、串扰、环路、信号回路、平面完整性、内层分割槽隙、信号端接等方面的高速和模拟PCB设计知识，能独立或在SI工程师等指导下完成关键信号和区域的SI仿真和分析并提出改进意见；&lt;/li&gt;
  &lt;li&gt;能在规则驱动下熟练手动或自动布线并修改通过，整板具有一定的美感，布线过程中能看出原理设计中80%以上低级错误并提出，能熟练正确进行引脚和门交换；&lt;/li&gt;
  &lt;li&gt;能与原理和结构设计工程师极好沟通，能看懂较复杂的机械图纸，并能提出一些原理、器件选择和结构上与PCB设计有关的合理改进意见，帮助系统设计早日成功；&lt;/li&gt;
  &lt;li&gt;测试点和丝印标记清晰明了、无差错，极少犯PCB设计中的低级错误，一般不会因PCB设计错误导致改版，对9）%以上的PCB加工厂家工程总是回馈能自行解决；&lt;/li&gt;
  &lt;li&gt;具备较多的可制造性方面知识并用天实践，所设计板子70%以上可用于直接量产。&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;工作内容-2&quot;&gt;工作内容：&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;极复杂PCB的设计和修改（如8路DVR底板、PC主板等）；&lt;/li&gt;
  &lt;li&gt;与自己设计PCB相关的调试和指定部分的SI仿真；&lt;/li&gt;
  &lt;li&gt;对所有更低级PCB工程师的工作指导和布线规则提供；&lt;/li&gt;
  &lt;li&gt;写相关的开发、调试日志；&lt;/li&gt;
  &lt;li&gt;制作和维护单位内部PCB标准封装库和标准布线模块；&lt;/li&gt;
  &lt;li&gt;必要时兼任任意更低级PCB工程师的工作。&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;工作职责-2&quot;&gt;工作职责：&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;对PCB中自己设计部分负责；&lt;/li&gt;
  &lt;li&gt;对单位内部PCB标准封装库和标准布线模块中自己设计部分负责；&lt;/li&gt;
  &lt;li&gt;对自己的SI仿真结果和解决方案负责。&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;工作岗位高级pcb工程师&quot;&gt;工作岗位：高级PCB工程师&lt;/h2&gt;
&lt;h3 id=&quot;能力要求-3&quot;&gt;能力要求：&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;掌握各种常见PCB设计软件之间的文档转换，转出文档基本可用于修改；&lt;/li&gt;
  &lt;li&gt;熟悉高速和模拟PCB设计中的所有要求，所设计或指导他人设计板子80%以上不存在相关问题；&lt;/li&gt;
  &lt;li&gt;具备丰富的可制造性方面知识并用于实践和指导工作，所设计或指导他人设计板子90%以上可用于直接量产；&lt;/li&gt;
  &lt;li&gt;熟练高速规则控制下的高密度布局、布线，并且所布模块或板子在稳定可靠的同时能做到80%以上非常具有美感；&lt;/li&gt;
  &lt;li&gt;非常富有创新性，能经常提出各种对提高PCB设计工作效率、PCB设计质量、系统中PCB结构分配等有建设性的提议。&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;工作内容-3&quot;&gt;工作内容：&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;参与系统设计中与PCB相关部分的分析、规划和仿真；&lt;/li&gt;
  &lt;li&gt;组织和进行PCB设计培训；&lt;/li&gt;
  &lt;li&gt;对所有更低级PCB工程师的工作指导和布线规则提供；&lt;/li&gt;
  &lt;li&gt;定相关的开发、调试日志；&lt;/li&gt;
  &lt;li&gt;SI仿真模型搜索、建立和规档；&lt;/li&gt;
  &lt;li&gt;整板和系统SI、PI、EMC仿真，PCB可制造性能评价，有问题PCB原因分析并提出有效的解决方案；&lt;/li&gt;
  &lt;li&gt;必要时兼任任意更低级PCB工程师的工作。&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;工作职责-3&quot;&gt;工作职责：&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;对所有自己的工作负责；&lt;/li&gt;
  &lt;li&gt;对所有对他人的指导工作负责。&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;一些小技巧&quot;&gt;一些小技巧&lt;/h1&gt;
&lt;p&gt;作为一个电子工程师设计电路是一项必备的硬功夫，但是原理设计再完美，如果电路板设计不合理性能将大打折扣，严重时甚至不能正常工作。根据我的经验，我总结出以下一些PCB设计中应该注意的地方，希望能对您有所启示。&lt;/p&gt;

&lt;p&gt;不管用什么软件，PCB设计有个大致的程序，按顺序来会省时省力，因此我将按制作流程来介绍一下。（由于Protel界面风格与WINDODWS接近，操作习惯也相近，且有强大的仿真功能，使用的人比较多，将以此软件作说明。）&lt;/p&gt;

&lt;p&gt;原理图设计是前期准备工作，经常见到初学者为了省事直接就去画PCB板了，这样将得不偿失，对简单的板子，如果熟练流程，可以跳过。但是对于初学者一定要按流程来，这样一方面可以养成良好的习惯，另一方面对复杂的电路也只有这样才能避免出错。&lt;/p&gt;

&lt;p&gt;在画原理图时，层次设计时要注意各个文件最后要连接为一个整体，这同样对以后的工作有重要意义。由于，软件的差别有些软件会出现看似相连实际未连（电气性能上）的情况。如果不用相关检测工具检测，万一出了问题，等板子做好了才发现就晚了。因此一再强调按顺序来做的重要性，希望引起大家的注意。&lt;/p&gt;

&lt;p&gt;原理图是根据设计的项目来的，只要电性连接正确没什么好说的。下面我们重点讨论一下具体的制板程序中的问题。&lt;/p&gt;

&lt;h2 id=&quot;制作物理边框&quot;&gt;制作物理边框&lt;/h2&gt;
&lt;p&gt;封闭的物理边框对以后的元件布局、走线来说是个基本平台，也对自动布局起着约束作用，否则，从原理图过来的元件会不知所措的。但这里一定要注意精确，否则以后出现安装问题麻烦可就大了。还有就是拐角地方最好用圆弧，一方面可以避免尖角划伤工人，同时又可以减轻应力作用。以前我的一个产品老是在运输过程中有个别机器出现面壳PCB板断裂的情况，改用圆弧后就好了。&lt;/p&gt;

&lt;h2 id=&quot;元件和网络的引入&quot;&gt;元件和网络的引入&lt;/h2&gt;

&lt;p&gt;把元件和网络引人画好的边框中应该很简单，但是这里往往会出问题，一定要细心地按提示的错误逐个解决，不然后面要费更大的力气。这里的问题一般来说有以下一些：
  元件的封装形式找不到，元件网络问题，有未使用的元件或管脚，对照提示这些问题可以很快搞定的。&lt;/p&gt;

&lt;h2 id=&quot;元件的布局&quot;&gt;元件的布局&lt;/h2&gt;

&lt;p&gt;元件的布局与走线对产品的寿命、稳定性、电磁兼容都有很大的影响，是应该特别注意的地方。一般来说应该有以下一些原则：&lt;/p&gt;

&lt;h3 id=&quot;放置顺序&quot;&gt;放置顺序&lt;/h3&gt;

&lt;p&gt;先放置与结构有关的固定位置的元器件，如电源插座、指示灯、开关、连接件之类，这些器件放置好后用软件的ＬＯＣＫ功能将其锁定，使之以后不会被误移动。再放置线路上的特殊元件和大的元器件，如发热元件、变压器、IC等。最后放置小器件。&lt;/p&gt;

&lt;h3 id=&quot;注意散热&quot;&gt;注意散热&lt;/h3&gt;
&lt;p&gt;元件布局还要特别注意散热问题。对于大功率电路，应该将那些发热元件如功率管、变压器等尽量靠边分散布局放置，便于热量散发，不要集中在一个地方，也不要离电容太近以免使电解液过早老化。&lt;/p&gt;

&lt;h2 id=&quot;布线&quot;&gt;布线&lt;/h2&gt;

&lt;h3 id=&quot;布线原则&quot;&gt;布线原则&lt;/h3&gt;
&lt;p&gt;走线的学问是非常高深的，每人都会有自己的体会，但还是有些通行的原则的。&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;高频数字电路走线细一些、短一些好&lt;/li&gt;
  &lt;li&gt;大电流信号、高电压信号与小信号之间应该注意隔离（隔离距离与要承受的耐压有 关，通常情况下在2KV时板上要距离2mm，在此之上以比例算还要加大，例如若要承受3KV的耐压测试，则高低压线路之间的距离应在3.5ｍｍ以上，许多情况下为避免爬电，还在印制线路板上的高低压之间开槽。）&lt;/li&gt;
  &lt;li&gt;两面板布线时，两面的导线宜相互垂直、斜交、或弯曲走线，避免相互平行，以减小寄生耦合；作为电路的输人及输出用的印制导线应尽量避兔相邻平行，以免发生回授，在这些导线之间最好加接地线。&lt;/li&gt;
  &lt;li&gt;走线拐角尽可能大于９０度，杜绝９０度以下的拐角，也尽量少用９０度拐角&lt;/li&gt;
  &lt;li&gt;同是地址线或者数据线，走线长度差异不要太大，否则短线部分要人为走弯线作补偿&lt;/li&gt;
  &lt;li&gt;走线尽量走在焊接面，特别是通孔工艺的PCB&lt;/li&gt;
  &lt;li&gt;尽量少用过孔、跳线&lt;/li&gt;
  &lt;li&gt;单面板焊盘必须要大，焊盘相连的线一定要粗，能放泪滴就放泪滴，一般的单面板厂家质量不会很好，否则对焊接和RE-WORK都会有问题&lt;/li&gt;
  &lt;li&gt;大面积敷铜要用网格状的，以防止波焊时板子产生气泡和因为热应力作用而弯曲，但在特殊场合下要考虑GND的流向，大小，不能简单的用铜箔填充了事，而是需要去走线&lt;/li&gt;
  &lt;li&gt;元器件和走线不能太靠边放，一般的单面板多为纸质板，受力后容易断裂，如果在边缘连线或放元器件就会受到影响&lt;/li&gt;
  &lt;li&gt;必须考虑生产、调试、维修的方便性&lt;/li&gt;
  &lt;li&gt;对模拟电路来说处理地的问题是很重要的，地上产生的噪声往往不便预料，可是一旦产生将会带来极大的麻烦，应该未雨绸缎。&lt;/li&gt;
  &lt;li&gt;对于功放电路，极微小的地噪声都会因为后级的放大对音质产生明显的影响。&lt;/li&gt;
  &lt;li&gt;在高精度A/D转换电路中，如果地线上有高频分量存在将会产生一定的温漂，影响放大器的工作。这时可以在板子的4角加退藕电容，一脚和板子上的地连，一脚连到安装孔上去（通过螺钉和机壳连），这样可将此分量虑去，放大器及A/D也就稳定了。&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;电磁兼容问题&quot;&gt;电磁兼容问题&lt;/h3&gt;
&lt;p&gt;电磁兼容问题在目前人们对环保产品倍加关注的情况下显得更加重要了。一般来说电磁信号的来源有３个：信号源，辐射，传输线。&lt;/p&gt;

&lt;h4 id=&quot;信号源&quot;&gt;信号源&lt;/h4&gt;
&lt;p&gt;晶振是常见的一种高频信号源，在功率谱上晶振的各次谐波能量值会明显高出平均值。可行的做法是控制信号的幅度，晶振外壳接地，对干扰信号进行屏蔽，采用特殊的滤波电路及器件等。&lt;/p&gt;

&lt;h4 id=&quot;特殊走线&quot;&gt;特殊走线&lt;/h4&gt;
&lt;p&gt;蛇形走线，因为应用场合不同其作用也是不同的，在电脑的主板中用在一些时钟信号上，如PCI_CLK、AGP_CLK。
它的作用有两点：&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;阻抗匹配&lt;/li&gt;
  &lt;li&gt;滤波电感&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;对一些重要信号，如INTEL HUB架构中的HUBLink，一共13根，频率可达233MHZ，要求必须严格等长，以消除时滞造成的隐患，这时，蛇形走线是唯一的解决办法。&lt;/p&gt;

&lt;p&gt;一般来讲，蛇形走线的线距&amp;gt;=２倍的线宽；若在普通PCB板中，除了具有滤波电感的作用外，还可作为收音机天线的电感线圈等等。&lt;/p&gt;

&lt;h2 id=&quot;调整完善&quot;&gt;调整完善&lt;/h2&gt;
&lt;p&gt;完成布线后，要做的就是对文字、个别元件、走线做些调整以及敷铜（这项工作不宜太早，否则会影响速度，又给布线带来麻烦），同样是为了便于进行生产、调试、维修。&lt;/p&gt;

&lt;p&gt;敷铜通常指以大面积的铜箔去填充布线后留下的空白区，可以铺GND的铜箔，也可以铺VCC的铜箔（但这样一旦短路容易烧毁器件，最好接地，&lt;/p&gt;

&lt;p&gt;除非不得已用来加大电源的导通面积，以承受较大的电流才接VCC）。包地则通常指用两根地线（TRAC）包住一撮有特殊要求的信号线，防止它被别人干扰或干扰别人。&lt;/p&gt;

&lt;p&gt;如果用敷铜代替地线一定要注意整个地是否连通，电流大小、流向与有无特殊要求，以确保减少不必要的失误。&lt;/p&gt;

&lt;h2 id=&quot;检查核对网络&quot;&gt;检查核对网络&lt;/h2&gt;

&lt;p&gt;有时候会因为误操作或疏忽造成所画的板子的网络关系与原理图不同，这时检察核对是很有必要的。所以画完以后切不可急于交给制版厂家，应该先做核对，后再进行后续工作。&lt;/p&gt;

&lt;h2 id=&quot;使用仿真功能&quot;&gt;使用仿真功能&lt;/h2&gt;

&lt;p&gt;完成这些工作后，如果时间允许还可以进行软件仿真。特别是高频数字电路，这样可以提前发现一些问题，大大减少以后的调试工作量。&lt;/p&gt;</content><author><name>Liam Hudson</name></author><category term="hardware" /><summary type="html">我所理解的PCB工程师金字塔分级标准</summary></entry><entry><title type="html">The Businessman &amp;amp; The Fisherman</title><link href="http://localhost:4000/the-businessman-and-fisherman" rel="alternate" type="text/html" title="The Businessman &amp; The Fisherman" /><published>2014-08-12T18:18:00+08:00</published><updated>2014-08-12T18:18:00+08:00</updated><id>http://localhost:4000/the-businessman-and-fisherman</id><content type="html" xml:base="http://localhost:4000/the-businessman-and-fisherman">&lt;p&gt;An American businessman took a vacation to a small coastal Mexican village on doctor’s orders. Unable to sleep after an urgent phone call from the office the first morning, he walked out to the pier to clear his head. A small boat with just one fisherman had docked, and inside the boat were several large yellowfin tuna. The American complimented the Mexican on the quality of his fish.&lt;/p&gt;

&lt;p&gt;“How long did it take you to catch them?” the American asked.&lt;/p&gt;

&lt;p&gt;“Only a little while,” the Mexican replied in surprisingly good English.&lt;/p&gt;

&lt;p&gt;“Why don’t you stay out longer and catch more fish?” the American then asked.&lt;/p&gt;

&lt;p&gt;“I have enough to support my family and give a few to friends,” the Mexican said as he unloaded them into a basket.&lt;/p&gt;

&lt;p&gt;“But… What do you do with the rest of your time?”&lt;/p&gt;

&lt;p&gt;The Mexican looked up and smiled. “I sleep late, fish a little, play with my children, take a siesta with my wife, Julia, and stroll into the village each evening, where I sip wine and play guitar with my amigos. I have a full and busy life, señor.”&lt;/p&gt;

&lt;p&gt;The American laughed and stood tall. “Sir, I’m a Harvard M.B.A. and can help you. You should spend more time fishing, and with the proceeds, buy a bigger boat. In no time, you could buy several boats with the increased haul. Eventually, you would have a fleet of fishing boats.”&lt;/p&gt;

&lt;p&gt;He continued, “Instead of selling your catch to a middleman, you would sell directly to the consumers, eventually opening your own cannery. You would control the product, processing, and distribution. You would need to leave this small coastal fishing village, of course, and move to Mexico City, then to Los Angeles, and eventually to New York City, where you could run your expanded enterprise with proper management.&lt;/p&gt;

&lt;p&gt;The Mexican fisherman asked, “But, señor, how long will all this take?”&lt;/p&gt;

&lt;p&gt;To which the American replied, “15-20 years, 25 tops.”&lt;/p&gt;

&lt;p&gt;“But what then, señor?”&lt;/p&gt;

&lt;p&gt;The American laughed and said, “That’s the best part. When the time is right, you would announce an IPO and sell your company stock to the public and become very rich. You would make millions.”&lt;/p&gt;

&lt;p&gt;“Millions señor? Then what?”&lt;/p&gt;

&lt;p&gt;“Then you would retire and move to a small coastal fishing village, where you would sleep late, fish a little, play with your kids, take a siesta with your wife, and stroll in to the village in the evenings where you could sip wine and play your guitar with your amigos.”&lt;/p&gt;

&lt;p&gt;Adapted from the “Anekdote zur Senkung der Arbeitsmoral” by &lt;strong&gt;Heinrich Böll&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;An influential German write and Nobel Prize for Literature in 1972.&lt;/p&gt;</content><author><name>Hannah Wolfe</name></author><category term="fables" /><summary type="html">An American businessman took a vacation to a small coastal Mexican village on doctor’s orders. Unable to sleep after an urgent phone call from the office the first morning, he walked out to the pier to clear his head. A small boat with just one fisherman had docked, and inside the boat were several large yellowfin tuna. The American complimented the Mexican on the quality of his fish.</summary></entry><entry><title type="html">Linux内核驱动开发之 驱动与用户间的数据传递</title><link href="http://localhost:4000/linux-kernel-driver-api-copy_to_user-and-copy_from_user" rel="alternate" type="text/html" title="Linux内核驱动开发之 驱动与用户间的数据传递" /><published>2013-03-03T06:12:00+08:00</published><updated>2013-03-03T06:12:00+08:00</updated><id>http://localhost:4000/linux-kernel-driver-api-copy_to_user-and-copy_from_user</id><content type="html" xml:base="http://localhost:4000/linux-kernel-driver-api-copy_to_user-and-copy_from_user">&lt;p&gt;linux内核驱动开发之 驱动与用户间的数据传递&lt;/p&gt;

&lt;h2 id=&quot;copy_from_user&quot;&gt;copy_from_user()&lt;/h2&gt;

&lt;p&gt;copy_from_user()能将用户空间的数据传入内核空间&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;asm/uaccess.h&amp;gt;
&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// void *to: 内核空间地址
// const void __user *from: 用户空间地址
// unsigned long n: 需要传的字节大小
&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;copy_from_user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;from&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;copy_to_user&quot;&gt;copy_to_user()&lt;/h2&gt;

&lt;p&gt;copy_to_user()能将内核空间的数据传入用户空间&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;asm/uaccess.h&amp;gt;
&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// void *to: 内核空间地址
// const void __user *from: 用户空间地址
// unsigned long n: 需要传的字节大小
&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;copy_to_user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;from&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;          
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Liam Hudson</name></author><category term="[&quot;linux&quot;]" /><category term="dirver" /><summary type="html">linux内核驱动开发之 驱动与用户间的数据传递</summary></entry><entry><title type="html">Emacs操作系统入门- 基本操作</title><link href="http://localhost:4000/emacs-move-in-window" rel="alternate" type="text/html" title="Emacs操作系统入门- 基本操作" /><published>2011-04-24T06:12:00+08:00</published><updated>2011-04-24T06:12:00+08:00</updated><id>http://localhost:4000/emacs-move-in-window</id><content type="html" xml:base="http://localhost:4000/emacs-move-in-window">&lt;p&gt;Emacs操作系统入门 —— 基本操作&lt;/p&gt;

&lt;h2 id=&quot;基本简介&quot;&gt;基本简介&lt;/h2&gt;
&lt;p&gt;Emacs是一个大而且全的系统，我们从她五六百页的Manual中就可以略微窥见其规模。
而且她有自己的编程语言E-lisp，是古老但一直没有过时的语言Lisp的变种，AutoCAD的二次开发也是用的Lisp的另一个变种。&lt;/p&gt;

&lt;p&gt;编辑器有很多，有的编辑器真的非常好用，也有很强的扩展性，那为什么要选择Emacs呢，我想选择Emacs的每一个人都有着自己的想法吧，有的可能是希望有一整套Lisp的环境，或者希望折腾出属于自己的编辑器，在或者希望在各个平台使用一套熟悉的编辑器软件等等种种理由，一千个读者有一千个哈姆雷特，存在既有价值。&lt;/p&gt;

&lt;h2 id=&quot;基本编辑操作&quot;&gt;基本编辑操作&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/emacs_startup_screen.png&quot; width=&quot;80%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;下面将介绍关于Emacs的一些基本操作，但是在正式开讲之前需要介绍一个最重要的操作那就是查看帮助文档的操作&lt;code class=&quot;highlighter-rouge&quot;&gt;C-h C-f&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;C+h C+v&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;C+h C+k&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;C+h m&lt;/code&gt;，这个操作基本上讲陪伴我们一生。&lt;/p&gt;
&lt;h3 id=&quot;打开文件&quot;&gt;打开文件&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;在Emacs中，打开文件是使用&lt;code class=&quot;highlighter-rouge&quot;&gt;C+c C+f&lt;/code&gt;命令&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;保存与关闭文件&quot;&gt;保存与关闭文件&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;在Emacs中，关闭单个文件，其实是关闭这个文件的&lt;strong&gt;buffer&lt;/strong&gt;，是使用&lt;code class=&quot;highlighter-rouge&quot;&gt;C+x k&lt;/code&gt;命令。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;退出emacs&quot;&gt;退出Emacs&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;想要退出Emacs，在GUI当然可以点×关闭，也可以用命令&lt;code class=&quot;highlighter-rouge&quot;&gt;C+x C+c&lt;/code&gt;。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;至此，我们已经可以在Emacs进行初步的编辑工作了。&lt;/p&gt;

&lt;h2 id=&quot;基本光标移动操作&quot;&gt;基本光标移动操作&lt;/h2&gt;

&lt;p&gt;经过之前的介绍，Emacs已经具备成为Notepad的替代品的可能。那么接下来更进一步，我们将介绍如何在Emacs的编辑过程快速的移动光标位置。&lt;/p&gt;

&lt;h3 id=&quot;基础移动上下左右&quot;&gt;基础移动——上下左右&lt;/h3&gt;

&lt;style&gt;
table th:first-of-type {
    width: 6cm;}
table th:nth-of-type(2) {
    width: 4cm;}
table th:nth-of-type(3) {
    width: 4cm;}
&lt;/style&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;功能&lt;/th&gt;
      &lt;th&gt;命令&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;向上移动&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;C+p&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;向下移动&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;C+n&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;向左移动&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;C+b&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;向右移动&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;C+f&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;行中移动行首行尾&quot;&gt;行中移动——行首、行尾&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;功能&lt;/th&gt;
      &lt;th&gt;命令&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;移至行首&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;C+a&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;移至行尾&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;C+e&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;段落中移动段落头段落尾&quot;&gt;段落中移动——段落头、段落尾&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;功能&lt;/th&gt;
      &lt;th&gt;命令&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;移至下一个段落的头&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;M+{&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;移至上一个段落的头&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;M+}&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;页中移动&quot;&gt;页中移动&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;功能&lt;/th&gt;
      &lt;th&gt;命令&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;向前翻一页&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;C+v&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;向后翻一页&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;M+v&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;移动到下一页&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;C+x [&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;移动到上一页&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;C+x ]&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;移动到某行&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;M+g g&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;移动到某字符&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;C+g c&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;将光标移动到屏幕中见&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;C+l&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;整个文件中的移动&quot;&gt;整个文件中的移动&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;功能&lt;/th&gt;
      &lt;th&gt;命令&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;移动到文件头&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;M+&amp;lt;&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;移动到文件尾&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;M+&amp;gt;&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;到这里我们就可以在字里行间快速的游走了呢！&lt;/p&gt;

&lt;h2 id=&quot;基本的编辑操作&quot;&gt;基本的编辑操作&lt;/h2&gt;</content><author><name>Liam Hudson</name></author><category term="[&quot;tools&quot;]" /><category term="emacs" /><summary type="html">Emacs操作系统入门 —— 基本操作</summary></entry><entry><title type="html">Balance Filter</title><link href="http://localhost:4000/The-Balance-filter" rel="alternate" type="text/html" title="Balance Filter" /><published>2007-08-23T22:18:00+08:00</published><updated>2007-08-23T22:18:00+08:00</updated><id>http://localhost:4000/The-Balance-filter</id><content type="html" xml:base="http://localhost:4000/The-Balance-filter">&lt;h1 id=&quot;the-balance-filter---初步&quot;&gt;The Balance Filter - 初步&lt;/h1&gt;
&lt;hr /&gt;</content><author><name>Liam Hudson</name></author><category term="hardware" /><summary type="html">The Balance Filter - 初步</summary></entry></feed>